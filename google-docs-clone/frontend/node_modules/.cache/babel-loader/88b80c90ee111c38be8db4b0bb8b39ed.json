{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\pages\\\\DocumentsListPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/DocumentsListPage.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllDocuments } from '../services/documentService';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentsListPage = () => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDocs = async () => {\n      try {\n        const data = await getAllDocuments();\n        setDocuments(data);\n      } catch (err) {\n        console.error('Error fetching documents:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDocs();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading documents...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/document/${doc._id}`,\n          children: doc.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, doc._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentsListPage, \"8r31evLcXq7q8yzkqc7GkHLWPYA=\");\n_c = DocumentsListPage;\nexport default DocumentsListPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentsListPage\");","map":{"version":3,"names":["React","useEffect","useState","getAllDocuments","Link","jsxDEV","_jsxDEV","DocumentsListPage","_s","documents","setDocuments","loading","setLoading","fetchDocs","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doc","to","_id","title","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/pages/DocumentsListPage.jsx"],"sourcesContent":["// src/pages/DocumentsListPage.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllDocuments } from '../services/documentService';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DocumentsListPage = () => {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDocs = async () => {\r\n      try {\r\n        const data = await getAllDocuments();\r\n        setDocuments(data);\r\n      } catch (err) {\r\n        console.error('Error fetching documents:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDocs();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading documents...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Your Documents</h1>\r\n      <ul>\r\n        {documents.map((doc) => (\r\n          <li key={doc._id}>\r\n            <Link to={`/document/${doc._id}`}>{doc.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentsListPage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMX,eAAe,CAAC,CAAC;QACpCO,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MACjD,CAAC,SAAS;QACRH,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAY,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEnD,oBACEhB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAAY,QAAA,EACGT,SAAS,CAACc,GAAG,CAAEC,GAAG,iBACjBlB,OAAA;QAAAY,QAAA,eACEZ,OAAA,CAACF,IAAI;UAACqB,EAAE,EAAE,aAAaD,GAAG,CAACE,GAAG,EAAG;UAAAR,QAAA,EAAEM,GAAG,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD7CE,GAAG,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCID,iBAAiB;AAAAqB,EAAA,GAAjBrB,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}