{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { io } from 'socket.io-client';\n\n// const SocketStatus = () => {\n//   const [status, setStatus] = useState('Disconnected');\n//   const [socket, setSocket] = useState(null);\n\n//   useEffect(() => {\n//     const newSocket = io('http://localhost:5000', {\n//       withCredentials: true,\n//     });\n\n//     newSocket.on('connect', () => {\n//       setStatus('Connected');\n//       console.log('Socket connected successfully!');\n//     });\n\n//     newSocket.on('disconnect', () => {\n//       setStatus('Disconnected');\n//       console.log('Socket disconnected');\n//     });\n\n//     newSocket.on('connect_error', (error) => {\n//       setStatus('Connection Failed');\n//       console.error('Socket connection error:', error);\n//     });\n\n//     setSocket(newSocket);\n\n//     return () => {\n//       newSocket.disconnect();\n//     };\n//   }, []);\n\n//   const testConnection = () => {\n//     if (socket) {\n//       socket.emit('test', { message: 'Hello from client!' });\n//       console.log('Test message sent');\n//     }\n//   };\n\n//   return (\n//     <div className=\"fixed bottom-4 right-4 bg-white border border-gray-300 rounded-lg p-3 shadow-lg z-50\">\n//       <div className=\"flex items-center space-x-2\">\n//         <div className={`w-3 h-3 rounded-full ${\n//           status === 'Connected' ? 'bg-green-500' : \n//           status === 'Connection Failed' ? 'bg-red-500' : 'bg-yellow-500'\n//         }`}></div>\n//         <span className=\"text-sm font-medium\">Socket: {status}</span>\n//       </div>\n//       <button \n//         onClick={testConnection}\n//         className=\"mt-2 text-xs bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\"\n//       >\n//         Test Connection\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default SocketStatus;","map":{"version":3,"names":[],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/components/SocketStatus.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { io } from 'socket.io-client';\r\n\r\n// const SocketStatus = () => {\r\n//   const [status, setStatus] = useState('Disconnected');\r\n//   const [socket, setSocket] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const newSocket = io('http://localhost:5000', {\r\n//       withCredentials: true,\r\n//     });\r\n\r\n//     newSocket.on('connect', () => {\r\n//       setStatus('Connected');\r\n//       console.log('Socket connected successfully!');\r\n//     });\r\n\r\n//     newSocket.on('disconnect', () => {\r\n//       setStatus('Disconnected');\r\n//       console.log('Socket disconnected');\r\n//     });\r\n\r\n//     newSocket.on('connect_error', (error) => {\r\n//       setStatus('Connection Failed');\r\n//       console.error('Socket connection error:', error);\r\n//     });\r\n\r\n//     setSocket(newSocket);\r\n\r\n//     return () => {\r\n//       newSocket.disconnect();\r\n//     };\r\n//   }, []);\r\n\r\n//   const testConnection = () => {\r\n//     if (socket) {\r\n//       socket.emit('test', { message: 'Hello from client!' });\r\n//       console.log('Test message sent');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed bottom-4 right-4 bg-white border border-gray-300 rounded-lg p-3 shadow-lg z-50\">\r\n//       <div className=\"flex items-center space-x-2\">\r\n//         <div className={`w-3 h-3 rounded-full ${\r\n//           status === 'Connected' ? 'bg-green-500' : \r\n//           status === 'Connection Failed' ? 'bg-red-500' : 'bg-yellow-500'\r\n//         }`}></div>\r\n//         <span className=\"text-sm font-medium\">Socket: {status}</span>\r\n//       </div>\r\n//       <button \r\n//         onClick={testConnection}\r\n//         className=\"mt-2 text-xs bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\"\r\n//       >\r\n//         Test Connection\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SocketStatus;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}