{"ast":null,"code":"import axiosInstance from '../axiosInstance';\nconst API_URL = '/api/documents';\n\n// Share a document with another user\nexport const shareDocument = async (documentId, email, permission) => {\n  try {\n    const response = await axiosInstance.post(`${API_URL}/${documentId}/share`, {\n      email,\n      permission\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to share document');\n  }\n};\n\n// Remove a collaborator from a document\nexport const removeCollaborator = async (documentId, collaboratorId) => {\n  try {\n    const response = await axiosInstance.delete(`${API_URL}/${documentId}/collaborators/${collaboratorId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to remove collaborator');\n  }\n};\n\n// Update collaborator permission\nexport const updateCollaboratorPermission = async (documentId, collaboratorId, permission) => {\n  try {\n    const response = await axiosInstance.put(`${API_URL}/${documentId}/collaborators/${collaboratorId}`, {\n      permission\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update permission');\n  }\n};\n\n// Get all collaborators for a document\nexport const getCollaborators = async documentId => {\n  try {\n    const response = await axiosInstance.get(`${API_URL}/${documentId}/collaborators`);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to fetch collaborators');\n  }\n};\n\n// Generate shareable link\nexport const generateShareableLink = async documentId => {\n  try {\n    const response = await axiosInstance.post(`${API_URL}/${documentId}/generate-link`);\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to generate shareable link');\n  }\n};\n\n// Get document by shareable link\nexport const getDocumentByShareableLink = async shareableLink => {\n  try {\n    const response = await axiosInstance.get(`${API_URL}/shared/${shareableLink}`);\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to access shared document');\n  }\n};","map":{"version":3,"names":["axiosInstance","API_URL","shareDocument","documentId","email","permission","response","post","data","error","_error$response","_error$response$data","Error","message","removeCollaborator","collaboratorId","delete","_error$response2","_error$response2$data","updateCollaboratorPermission","put","_error$response3","_error$response3$data","getCollaborators","get","_error$response4","_error$response4$data","generateShareableLink","_error$response5","_error$response5$data","getDocumentByShareableLink","shareableLink","_error$response6","_error$response6$data"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/services/sharingService.js"],"sourcesContent":["import axiosInstance from '../axiosInstance';\r\n\r\nconst API_URL = '/api/documents';\r\n\r\n// Share a document with another user\r\nexport const shareDocument = async (documentId, email, permission) => {\r\n    try {\r\n        const response = await axiosInstance.post(`${API_URL}/${documentId}/share`, {\r\n            email,\r\n            permission\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to share document');\r\n    }\r\n};\r\n\r\n// Remove a collaborator from a document\r\nexport const removeCollaborator = async (documentId, collaboratorId) => {\r\n    try {\r\n        const response = await axiosInstance.delete(`${API_URL}/${documentId}/collaborators/${collaboratorId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to remove collaborator');\r\n    }\r\n};\r\n\r\n// Update collaborator permission\r\nexport const updateCollaboratorPermission = async (documentId, collaboratorId, permission) => {\r\n    try {\r\n        const response = await axiosInstance.put(`${API_URL}/${documentId}/collaborators/${collaboratorId}`, {\r\n            permission\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to update permission');\r\n    }\r\n};\r\n\r\n// Get all collaborators for a document\r\nexport const getCollaborators = async (documentId) => {\r\n    try {\r\n        const response = await axiosInstance.get(`${API_URL}/${documentId}/collaborators`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to fetch collaborators');\r\n    }\r\n};\r\n\r\n// Generate shareable link\r\nexport const generateShareableLink = async (documentId) => {\r\n    try {\r\n        const response = await axiosInstance.post(`${API_URL}/${documentId}/generate-link`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to generate shareable link');\r\n    }\r\n};\r\n\r\n// Get document by shareable link\r\nexport const getDocumentByShareableLink = async (shareableLink) => {\r\n    try {\r\n        const response = await axiosInstance.get(`${API_URL}/shared/${shareableLink}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to access shared document');\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}