{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\components\\\\DocumentEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDocument, updateDocument } from '../services/documentService';\nimport TextElement from './TextElement';\nimport ImageElement from './ImageElement';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentEditor = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [document, setDocument] = useState({\n    title: '',\n    content: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleChange = updatedContent => {\n    setDocument(prevDoc => ({\n      ...prevDoc,\n      content: updatedContent\n    }));\n  };\n  useEffect(() => {\n    const fetchDocument = async () => {\n      try {\n        const fetched = await getDocument(id);\n        console.log('Fetched document on edit page:', fetched);\n        const contentArray = Array.isArray(fetched.content) ? fetched.content : [{\n          type: 'text',\n          content: fetched.content || ''\n        }];\n        setDocument({\n          title: fetched.title || 'Untitled Document',\n          content: contentArray\n        });\n      } catch (error) {\n        console.error('Error fetching document:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDocument();\n  }, [id]);\n  const handleContentChange = (index, newContent) => {\n    const updated = [...document.content];\n    updated[index].content = newContent;\n    setDocument({\n      ...document,\n      content: updated\n    });\n  };\n  const handleImageChange = (index, newSrc) => {\n    const updated = [...document.content];\n    updated[index].src = newSrc;\n    setDocument({\n      ...document,\n      content: updated\n    });\n  };\n  const handleSave = async () => {\n    try {\n      await updateDocument(id, document);\n      alert('Document saved successfully!');\n    } catch (error) {\n      console.error('Error saving document:', error);\n      alert('Failed to save document.');\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: document.title || 'Untitled Document'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/documents'),\n          className: \"bg-gray-300 text-black px-3 py-1 rounded hover:bg-gray-400\",\n          children: \"Back to Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\",\n          children: \"Save Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: document.content.map((element, index) => {\n        if (element.type === 'text') {\n          return /*#__PURE__*/_jsxDEV(TextElement, {\n            content: element.content,\n            onChange: newContent => {\n              const updatedContent = [...document.content];\n              updatedContent[index].content = newContent;\n              handleChange(updatedContent);\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this);\n        } else if (element.type === 'image') {\n          return /*#__PURE__*/_jsxDEV(ImageElement, {\n            src: element.src,\n            alt: element.alt,\n            onDelete: () => {\n              const updatedContent = document.content.filter((_, i) => i !== index);\n              handleChange(updatedContent);\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentEditor, \"k2ZXJXRH/jlLrzVmkkZGytuDcfw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDocument","updateDocument","TextElement","ImageElement","useNavigate","jsxDEV","_jsxDEV","DocumentEditor","_s","id","document","setDocument","title","content","isLoading","setIsLoading","navigate","handleChange","updatedContent","prevDoc","fetchDocument","fetched","console","log","contentArray","Array","isArray","type","error","handleContentChange","index","newContent","updated","handleImageChange","newSrc","src","handleSave","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","element","onChange","alt","onDelete","filter","_","i","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/components/DocumentEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDocument, updateDocument } from '../services/documentService';\nimport TextElement from './TextElement';\nimport ImageElement from './ImageElement';\nimport { useNavigate } from 'react-router-dom';\n\nconst DocumentEditor = () => {\n  const { id } = useParams();\n  const [document, setDocument] = useState({ title: '', content: [] });\n  const [isLoading, setIsLoading] = useState(true);\n\n  const navigate = useNavigate();\n\nconst handleChange = (updatedContent) => {\n  setDocument((prevDoc) => ({ ...prevDoc, content: updatedContent }));\n};\n\n\n  useEffect(() => {\n    const fetchDocument = async () => {\n      try {\n        const fetched = await getDocument(id);\n        console.log('Fetched document on edit page:', fetched);\n        const contentArray = Array.isArray(fetched.content)\n          ? fetched.content\n          : [{ type: 'text', content: fetched.content || '' }];\n\n        setDocument({\n          title: fetched.title || 'Untitled Document',\n          content: contentArray,\n        });\n      } catch (error) {\n        console.error('Error fetching document:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDocument();\n  }, [id]);\n\n  const handleContentChange = (index, newContent) => {\n    const updated = [...document.content];\n    updated[index].content = newContent;\n    setDocument({ ...document, content: updated });\n  };\n\n  const handleImageChange = (index, newSrc) => {\n    const updated = [...document.content];\n    updated[index].src = newSrc;\n    setDocument({ ...document, content: updated });\n  };\n\n  const handleSave = async () => {\n    try {\n      await updateDocument(id, document);\n      alert('Document saved successfully!');\n    } catch (error) {\n      console.error('Error saving document:', error);\n      alert('Failed to save document.');\n    }\n  };\n\n  if (isLoading) return <div className=\"p-4\">Loading...</div>;\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">{document.title || 'Untitled Document'}</h1>\n        <div className=\"space-x-2\">\n          <button\n            onClick={() => navigate('/documents')}\n            className=\"bg-gray-300 text-black px-3 py-1 rounded hover:bg-gray-400\"\n          >\n            Back to Documents\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\n          >\n            Save Document\n          </button>\n        </div>\n      </div>\n\n      {/* Editor content below */}\n      <div>\n        {document.content.map((element, index) => {\n          if (element.type === 'text') {\n            return (\n              <TextElement\n                key={index}\n                content={element.content}\n                onChange={(newContent) => {\n                  const updatedContent = [...document.content];\n                  updatedContent[index].content = newContent;\n                  handleChange(updatedContent);\n                }}\n              />\n            );\n          } else if (element.type === 'image') {\n            return (\n              <ImageElement\n                key={index}\n                src={element.src}\n                alt={element.alt}\n                onDelete={() => {\n                  const updatedContent = document.content.filter((_, i) => i !== index);\n                  handleChange(updatedContent);\n                }}\n              />\n            );\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}