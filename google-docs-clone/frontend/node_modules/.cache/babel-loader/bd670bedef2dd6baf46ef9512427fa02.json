{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\nconst useSocket = (documentId, userId, userName) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const socketRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(_s(() => {\n    _s();\n    console.log('🔄 useSocket effect triggered:', {\n      documentId,\n      userId,\n      userName,\n      prevDocumentId: useRef(documentId).current,\n      prevUserId: useRef(userId).current,\n      prevUserName: useRef(userName).current\n    });\n\n    // Update refs\n    useRef(documentId).current = documentId;\n    useRef(userId).current = userId;\n    useRef(userName).current = userName;\n    if (!documentId || !userId) {\n      console.log('❌ Missing required params:', {\n        documentId,\n        userId,\n        userName\n      });\n      return;\n    }\n    console.log('🔌 Creating socket connection...', {\n      documentId,\n      userId,\n      userName\n    });\n    const newSocket = io('http://localhost:5000', {\n      transports: ['websocket', 'polling'],\n      timeout: 10000,\n      forceNew: true // Force new connection\n    });\n    newSocket.on('connect', () => {\n      console.log('✅ Socket connected successfully:', newSocket.id);\n      setIsConnected(true);\n\n      // Add a small delay to ensure connection is stable\n      setTimeout(() => {\n        newSocket.emit('join-document', {\n          documentId,\n          userId,\n          userName\n        });\n        console.log('📋 Emitted join-document event');\n      }, 100);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('❌ Socket connection error:', error);\n      setIsConnected(false);\n    });\n    newSocket.on('disconnect', reason => {\n      console.log('❌ Socket disconnected:', reason);\n      setIsConnected(false);\n    });\n    socketRef.current = newSocket;\n    return () => {\n      console.log('🧹 Cleaning up socket');\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n    };\n  }, \"x5HyPNxUedNnsb08elo0zVrqybQ=\"), [documentId, userId, userName]);\n  const emitDocumentChange = (delta, content) => {\n    if (socketRef.current && isConnected) {\n      console.log('Socket emitting document-change:', {\n        documentId,\n        delta,\n        content\n      });\n      socketRef.current.emit('document-change', {\n        documentId,\n        delta,\n        content\n      });\n    } else {\n      console.warn('Socket not connected yet, skipping document-change emit');\n    }\n  };\n  const emitCursorChange = (position, selection) => {\n    if (socketRef.current && isConnected) {\n      console.log('Socket emitting cursor-change:', {\n        documentId,\n        position,\n        selection\n      });\n      socketRef.current.emit('cursor-change', {\n        documentId,\n        position,\n        selection\n      });\n    } else {\n      console.warn('Socket not connected yet, skipping cursor-change emit');\n    }\n  };\n  const onDocumentChange = callback => {\n    if (socketRef.current) {\n      socketRef.current.on('document-changed', callback);\n    }\n  };\n  const onCursorChange = callback => {\n    if (socketRef.current) {\n      console.log('🔗 Setting up cursor-changed listener');\n      socketRef.current.on('cursor-changed', callback);\n    }\n  };\n  const onUserJoined = callback => {\n    if (socketRef.current) {\n      socketRef.current.on('user-joined', callback);\n    }\n  };\n  const onUserLeft = callback => {\n    if (socketRef.current) {\n      socketRef.current.on('user-left', callback);\n    }\n  };\n  const onUsersInDocument = callback => {\n    if (socketRef.current) {\n      socketRef.current.on('users-in-document', callback);\n    }\n  };\n  const offDocumentChange = () => {\n    if (socketRef.current) {\n      socketRef.current.off('document-changed');\n    }\n  };\n  const offCursorChange = () => {\n    if (socketRef.current) {\n      console.log('🔌 Removing cursor-changed listener');\n      socketRef.current.off('cursor-changed');\n    }\n  };\n  const offUserJoined = () => {\n    if (socketRef.current) {\n      socketRef.current.off('user-joined');\n    }\n  };\n  const offUserLeft = () => {\n    if (socketRef.current) {\n      socketRef.current.off('user-left');\n    }\n  };\n  const offUsersInDocument = () => {\n    if (socketRef.current) {\n      socketRef.current.off('users-in-document');\n    }\n  };\n  return {\n    socket: socketRef.current,\n    isConnected,\n    emitDocumentChange,\n    emitCursorChange,\n    onDocumentChange,\n    onCursorChange,\n    onUserJoined,\n    onUserLeft,\n    onUsersInDocument,\n    offDocumentChange,\n    offCursorChange,\n    offUserJoined,\n    offUserLeft,\n    offUsersInDocument\n  };\n};\n_s2(useSocket, \"CYN7YzET2lyTayvLD2y4n9TqHs0=\");\nexport default useSocket;","map":{"version":3,"names":["useEffect","useRef","useState","io","useSocket","documentId","userId","userName","_s2","_s","$RefreshSig$","socketRef","isConnected","setIsConnected","console","log","prevDocumentId","current","prevUserId","prevUserName","newSocket","transports","timeout","forceNew","on","id","setTimeout","emit","error","reason","disconnect","emitDocumentChange","delta","content","warn","emitCursorChange","position","selection","onDocumentChange","callback","onCursorChange","onUserJoined","onUserLeft","onUsersInDocument","offDocumentChange","off","offCursorChange","offUserJoined","offUserLeft","offUsersInDocument","socket"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/hooks/useSocket.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst useSocket = (documentId, userId, userName) => {\r\n  const socketRef = useRef(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log('🔄 useSocket effect triggered:', { \r\n      documentId, \r\n      userId, \r\n      userName,\r\n      prevDocumentId: useRef(documentId).current,\r\n      prevUserId: useRef(userId).current,\r\n      prevUserName: useRef(userName).current\r\n    });\r\n    \r\n    // Update refs\r\n    useRef(documentId).current = documentId;\r\n    useRef(userId).current = userId;\r\n    useRef(userName).current = userName;\r\n\r\n    if (!documentId || !userId) {\r\n      console.log('❌ Missing required params:', { documentId, userId, userName });\r\n      return;\r\n    }\r\n\r\n    console.log('🔌 Creating socket connection...', { documentId, userId, userName });\r\n    \r\n    const newSocket = io('http://localhost:5000', {\r\n      transports: ['websocket', 'polling'],\r\n      timeout: 10000,\r\n      forceNew: true, // Force new connection\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('✅ Socket connected successfully:', newSocket.id);\r\n      setIsConnected(true);\r\n      \r\n      // Add a small delay to ensure connection is stable\r\n      setTimeout(() => {\r\n        newSocket.emit('join-document', {\r\n          documentId,\r\n          userId,\r\n          userName\r\n        });\r\n        console.log('📋 Emitted join-document event');\r\n      }, 100);\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('❌ Socket connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('disconnect', (reason) => {\r\n      console.log('❌ Socket disconnected:', reason);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    socketRef.current = newSocket;\r\n\r\n    return () => {\r\n      console.log('🧹 Cleaning up socket');\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [documentId, userId, userName]);\r\n\r\n  const emitDocumentChange = (delta, content) => {\r\n    if (socketRef.current && isConnected) {\r\n      console.log('Socket emitting document-change:', { documentId, delta, content });\r\n      socketRef.current.emit('document-change', {\r\n        documentId,\r\n        delta,\r\n        content,\r\n      });\r\n    } else {\r\n      console.warn('Socket not connected yet, skipping document-change emit');\r\n    }\r\n  };\r\n\r\n  const emitCursorChange = (position, selection) => {\r\n    if (socketRef.current && isConnected) {\r\n      console.log('Socket emitting cursor-change:', { documentId, position, selection });\r\n      socketRef.current.emit('cursor-change', {\r\n        documentId,\r\n        position,\r\n        selection,\r\n      });\r\n    } else {\r\n      console.warn('Socket not connected yet, skipping cursor-change emit');\r\n    }\r\n  };\r\n\r\n  const onDocumentChange = (callback) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.on('document-changed', callback);\r\n    }\r\n  };\r\n\r\n  const onCursorChange = (callback) => {\r\n    if (socketRef.current) {\r\n      console.log('🔗 Setting up cursor-changed listener');\r\n      socketRef.current.on('cursor-changed', callback);\r\n    }\r\n  };\r\n\r\n  const onUserJoined = (callback) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.on('user-joined', callback);\r\n    }\r\n  };\r\n\r\n  const onUserLeft = (callback) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.on('user-left', callback);\r\n    }\r\n  };\r\n\r\n  const onUsersInDocument = (callback) => {\r\n    if (socketRef.current) {\r\n      socketRef.current.on('users-in-document', callback);\r\n    }\r\n  };\r\n\r\n  const offDocumentChange = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.off('document-changed');\r\n    }\r\n  };\r\n\r\n  const offCursorChange = () => {\r\n    if (socketRef.current) {\r\n      console.log('🔌 Removing cursor-changed listener');\r\n      socketRef.current.off('cursor-changed');\r\n    }\r\n  };\r\n\r\n  const offUserJoined = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.off('user-joined');\r\n    }\r\n  };\r\n\r\n  const offUserLeft = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.off('user-left');\r\n    }\r\n  };\r\n\r\n  const offUsersInDocument = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.off('users-in-document');\r\n    }\r\n  };\r\n\r\n  return {\r\n    socket: socketRef.current,\r\n    isConnected,\r\n    emitDocumentChange,\r\n    emitCursorChange,\r\n    onDocumentChange,\r\n    onCursorChange,\r\n    onUserJoined,\r\n    onUserLeft,\r\n    onUsersInDocument,\r\n    offDocumentChange,\r\n    offCursorChange,\r\n    offUserJoined,\r\n    offUserLeft,\r\n    offUsersInDocument,\r\n  };\r\n};\r\n\r\nexport default useSocket;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}