{"ast":null,"code":"import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nexport const downloadDocumentAsPDF = async documentData => {\n  try {\n    // Create a temporary container for rendering\n    const container = document.createElement('div');\n    container.style.width = '210mm'; // A4 width\n    container.style.padding = '20mm';\n    container.style.backgroundColor = 'white';\n    container.style.fontFamily = 'Arial, sans-serif';\n\n    // Add title\n    const title = document.createElement('h1');\n    title.textContent = documentData.title;\n    title.style.marginBottom = '20px';\n    container.appendChild(title);\n\n    // Render content blocks\n    if (Array.isArray(documentData.content)) {\n      documentData.content.forEach(block => {\n        if (block.type === 'text') {\n          const textDiv = document.createElement('div');\n          textDiv.innerHTML = block.content;\n          textDiv.style.marginBottom = '10px';\n          container.appendChild(textDiv);\n        } else if (block.type === 'image') {\n          const img = document.createElement('img');\n          img.src = block.src;\n          img.alt = block.alt || '';\n          img.style.maxWidth = '100%';\n          img.style.marginBottom = '10px';\n          container.appendChild(img);\n        }\n      });\n    } else {\n      // Handle string content\n      const textDiv = document.createElement('div');\n      textDiv.innerHTML = documentData.content || 'No content';\n      container.appendChild(textDiv);\n    }\n\n    // Temporarily add to DOM\n    container.style.position = 'absolute';\n    container.style.left = '-9999px';\n    document.body.appendChild(container);\n\n    // Convert to canvas\n    const canvas = await html2canvas(container, {\n      scale: 2,\n      useCORS: true,\n      allowTaint: true\n    });\n\n    // Remove from DOM\n    document.body.removeChild(container);\n\n    // Create PDF\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const imgData = canvas.toDataURL('image/png');\n    const pdfWidth = pdf.internal.pageSize.getWidth();\n    const pdfHeight = canvas.height * pdfWidth / canvas.width;\n    pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n\n    // Download\n    pdf.save(`${documentData.title || 'document'}.pdf`);\n    return true;\n  } catch (error) {\n    console.error('Error downloading PDF:', error);\n    throw new Error('Failed to download document');\n  }\n};","map":{"version":3,"names":["jsPDF","html2canvas","downloadDocumentAsPDF","documentData","container","document","createElement","style","width","padding","backgroundColor","fontFamily","title","textContent","marginBottom","appendChild","Array","isArray","content","forEach","block","type","textDiv","innerHTML","img","src","alt","maxWidth","position","left","body","canvas","scale","useCORS","allowTaint","removeChild","pdf","imgData","toDataURL","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","addImage","save","error","console","Error"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/services/downloadService.js"],"sourcesContent":["import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nexport const downloadDocumentAsPDF = async (documentData) => {\n  try {\n    // Create a temporary container for rendering\n    const container = document.createElement('div');\n    container.style.width = '210mm'; // A4 width\n    container.style.padding = '20mm';\n    container.style.backgroundColor = 'white';\n    container.style.fontFamily = 'Arial, sans-serif';\n    \n    // Add title\n    const title = document.createElement('h1');\n    title.textContent = documentData.title;\n    title.style.marginBottom = '20px';\n    container.appendChild(title);\n    \n    // Render content blocks\n    if (Array.isArray(documentData.content)) {\n      documentData.content.forEach(block => {\n        if (block.type === 'text') {\n          const textDiv = document.createElement('div');\n          textDiv.innerHTML = block.content;\n          textDiv.style.marginBottom = '10px';\n          container.appendChild(textDiv);\n        } else if (block.type === 'image') {\n          const img = document.createElement('img');\n          img.src = block.src;\n          img.alt = block.alt || '';\n          img.style.maxWidth = '100%';\n          img.style.marginBottom = '10px';\n          container.appendChild(img);\n        }\n      });\n    } else {\n      // Handle string content\n      const textDiv = document.createElement('div');\n      textDiv.innerHTML = documentData.content || 'No content';\n      container.appendChild(textDiv);\n    }\n    \n    // Temporarily add to DOM\n    container.style.position = 'absolute';\n    container.style.left = '-9999px';\n    document.body.appendChild(container);\n    \n    // Convert to canvas\n    const canvas = await html2canvas(container, {\n      scale: 2,\n      useCORS: true,\n      allowTaint: true\n    });\n    \n    // Remove from DOM\n    document.body.removeChild(container);\n    \n    // Create PDF\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const imgData = canvas.toDataURL('image/png');\n    \n    const pdfWidth = pdf.internal.pageSize.getWidth();\n    const pdfHeight = (canvas.height * pdfWidth) / canvas.width;\n    \n    pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n    \n    // Download\n    pdf.save(`${documentData.title || 'document'}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('Error downloading PDF:', error);\n    throw new Error('Failed to download document');\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;AAErC,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,YAAY,IAAK;EAC3D,IAAI;IACF;IACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC/CF,SAAS,CAACG,KAAK,CAACC,KAAK,GAAG,OAAO,CAAC,CAAC;IACjCJ,SAAS,CAACG,KAAK,CAACE,OAAO,GAAG,MAAM;IAChCL,SAAS,CAACG,KAAK,CAACG,eAAe,GAAG,OAAO;IACzCN,SAAS,CAACG,KAAK,CAACI,UAAU,GAAG,mBAAmB;;IAEhD;IACA,MAAMC,KAAK,GAAGP,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;IAC1CM,KAAK,CAACC,WAAW,GAAGV,YAAY,CAACS,KAAK;IACtCA,KAAK,CAACL,KAAK,CAACO,YAAY,GAAG,MAAM;IACjCV,SAAS,CAACW,WAAW,CAACH,KAAK,CAAC;;IAE5B;IACA,IAAII,KAAK,CAACC,OAAO,CAACd,YAAY,CAACe,OAAO,CAAC,EAAE;MACvCf,YAAY,CAACe,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACpC,IAAIA,KAAK,CAACC,IAAI,KAAK,MAAM,EAAE;UACzB,MAAMC,OAAO,GAAGjB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC7CgB,OAAO,CAACC,SAAS,GAAGH,KAAK,CAACF,OAAO;UACjCI,OAAO,CAACf,KAAK,CAACO,YAAY,GAAG,MAAM;UACnCV,SAAS,CAACW,WAAW,CAACO,OAAO,CAAC;QAChC,CAAC,MAAM,IAAIF,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;UACjC,MAAMG,GAAG,GAAGnB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACzCkB,GAAG,CAACC,GAAG,GAAGL,KAAK,CAACK,GAAG;UACnBD,GAAG,CAACE,GAAG,GAAGN,KAAK,CAACM,GAAG,IAAI,EAAE;UACzBF,GAAG,CAACjB,KAAK,CAACoB,QAAQ,GAAG,MAAM;UAC3BH,GAAG,CAACjB,KAAK,CAACO,YAAY,GAAG,MAAM;UAC/BV,SAAS,CAACW,WAAW,CAACS,GAAG,CAAC;QAC5B;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA,MAAMF,OAAO,GAAGjB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7CgB,OAAO,CAACC,SAAS,GAAGpB,YAAY,CAACe,OAAO,IAAI,YAAY;MACxDd,SAAS,CAACW,WAAW,CAACO,OAAO,CAAC;IAChC;;IAEA;IACAlB,SAAS,CAACG,KAAK,CAACqB,QAAQ,GAAG,UAAU;IACrCxB,SAAS,CAACG,KAAK,CAACsB,IAAI,GAAG,SAAS;IAChCxB,QAAQ,CAACyB,IAAI,CAACf,WAAW,CAACX,SAAS,CAAC;;IAEpC;IACA,MAAM2B,MAAM,GAAG,MAAM9B,WAAW,CAACG,SAAS,EAAE;MAC1C4B,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE;IACd,CAAC,CAAC;;IAEF;IACA7B,QAAQ,CAACyB,IAAI,CAACK,WAAW,CAAC/B,SAAS,CAAC;;IAEpC;IACA,MAAMgC,GAAG,GAAG,IAAIpC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACtC,MAAMqC,OAAO,GAAGN,MAAM,CAACO,SAAS,CAAC,WAAW,CAAC;IAE7C,MAAMC,QAAQ,GAAGH,GAAG,CAACI,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;IACjD,MAAMC,SAAS,GAAIZ,MAAM,CAACa,MAAM,GAAGL,QAAQ,GAAIR,MAAM,CAACvB,KAAK;IAE3D4B,GAAG,CAACS,QAAQ,CAACR,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEE,QAAQ,EAAEI,SAAS,CAAC;;IAEvD;IACAP,GAAG,CAACU,IAAI,CAAC,GAAG3C,YAAY,CAACS,KAAK,IAAI,UAAU,MAAM,CAAC;IAEnD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOmC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAM,IAAIE,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}