{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { getUser, loginUser, logoutUser } from '../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return setLoading(false);\n        const currentUser = await getUser(); // Updated below\n        setUser(currentUser);\n        setIsAuthenticated(true);\n      } catch (err) {\n        console.error(err);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async credentials => {\n    const {\n      user,\n      token\n    } = await loginUser(credentials);\n    localStorage.setItem('token', token); // Save token\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n  const logout = async () => {\n    await logoutUser(); // optional\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      isAuthenticated,\n      login,\n      logout,\n      setUser,\n      setIsAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getUser","loginUser","logoutUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","fetchUser","token","localStorage","getItem","currentUser","err","console","error","login","credentials","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { getUser, loginUser, logoutUser } from '../services/userService';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                if (!token) return setLoading(false);\n\n                const currentUser = await getUser(); // Updated below\n                setUser(currentUser);\n                setIsAuthenticated(true);\n            } catch (err) {\n                console.error(err);\n                setIsAuthenticated(false);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUser();\n    }, []);\n\n    const login = async (credentials) => {\n        const { user, token } = await loginUser(credentials);\n        localStorage.setItem('token', token); // Save token\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const logout = async () => {\n        await logoutUser(); // optional\n        localStorage.removeItem('token');\n        setUser(null);\n        setIsAuthenticated(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, loading, isAuthenticated, login, logout, setUser, setIsAuthenticated }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,OAAO,EAAEC,SAAS,EAAEC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE,OAAOJ,UAAU,CAAC,KAAK,CAAC;QAEpC,MAAMO,WAAW,GAAG,MAAMnB,OAAO,CAAC,CAAC,CAAC,CAAC;QACrCU,OAAO,CAACS,WAAW,CAAC;QACpBL,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBN,kBAAkB,CAAC,KAAK,CAAC;MAC7B,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAOC,WAAW,IAAK;IACjC,MAAM;MAAEf,IAAI;MAAEO;IAAM,CAAC,GAAG,MAAMf,SAAS,CAACuB,WAAW,CAAC;IACpDP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC,CAAC,CAAC;IACtCN,OAAO,CAACD,IAAI,CAAC;IACbK,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMY,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMxB,UAAU,CAAC,CAAC,CAAC,CAAC;IACpBe,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCjB,OAAO,CAAC,IAAI,CAAC;IACbI,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACIV,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEE,OAAO;MAAEE,eAAe;MAAEU,KAAK;MAAEG,MAAM;MAAEhB,OAAO;MAAEI;IAAmB,CAAE;IAAAP,QAAA,EACvGA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CA5CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}