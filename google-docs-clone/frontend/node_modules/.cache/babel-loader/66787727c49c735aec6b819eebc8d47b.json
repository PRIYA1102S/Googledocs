{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\pages\\\\DocumentPage.jsx\";\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import DocumentEditor from '../components/DocumentEditor';\n// import { getDocument } from '../services/documentService';\n\n// const DocumentPage = () => {\n//     const { id } = useParams();\n//     const [document, setDocument] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         const fetchDocument = async () => {\n//             try {\n//                 const fetchedDocument = await getDocument(id);\n//                 setDocument(fetchedDocument);\n//             } catch (err) {\n//                 setError('Failed to load document');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchDocument();\n//     }, [id]);\n\n//     if (loading) return <div>Loading...</div>;\n//     if (error) return <div>{error}</div>;\n\n//     return (\n//         <div>\n//             <h1>{document.title}</h1>\n//             <DocumentEditor initialContent={document.content} />\n//         </div>\n//     );\n// };\n\n// export default DocumentPage;\n\n// DocumentPage.jsx\nimport React from 'react';\nimport DocumentEditor from '../components/DocumentEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DocumentEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = DocumentPage;\nexport default DocumentPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentPage\");","map":{"version":3,"names":["React","DocumentEditor","jsxDEV","_jsxDEV","DocumentPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/pages/DocumentPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import DocumentEditor from '../components/DocumentEditor';\n// import { getDocument } from '../services/documentService';\n\n// const DocumentPage = () => {\n//     const { id } = useParams();\n//     const [document, setDocument] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         const fetchDocument = async () => {\n//             try {\n//                 const fetchedDocument = await getDocument(id);\n//                 setDocument(fetchedDocument);\n//             } catch (err) {\n//                 setError('Failed to load document');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchDocument();\n//     }, [id]);\n\n//     if (loading) return <div>Loading...</div>;\n//     if (error) return <div>{error}</div>;\n\n//     return (\n//         <div>\n//             <h1>{document.title}</h1>\n//             <DocumentEditor initialContent={document.content} />\n//         </div>\n//     );\n// };\n\n// export default DocumentPage;\n\n// DocumentPage.jsx\nimport React from 'react';\nimport DocumentEditor from '../components/DocumentEditor';\n\nconst DocumentPage = () => {\n    return (\n        <div>\n            <DocumentEditor />\n        </div>\n    );\n};\n\nexport default DocumentPage;\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBACID,OAAA;IAAAE,QAAA,eACIF,OAAA,CAACF,cAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAACC,EAAA,GANIN,YAAY;AAQlB,eAAeA,YAAY;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}