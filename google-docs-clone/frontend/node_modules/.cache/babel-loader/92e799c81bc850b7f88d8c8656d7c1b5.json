{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\components\\\\DocumentPreview.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentPreview = ({\n  content,\n  maxLength = 200\n}) => {\n  _s();\n  const {\n    isDark\n  } = useTheme();\n  const renderContent = () => {\n    if (!Array.isArray(content)) {\n      return null;\n    }\n    const textBlock = content.find(block => block.type === 'text');\n    if (!textBlock) {\n      return null;\n    }\n\n    // Create a temporary div to extract text content from HTML\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = textBlock.content;\n    const textContent = tempDiv.textContent || tempDiv.innerText || '';\n\n    // Truncate if too long\n    const truncated = textContent.length > maxLength ? textContent.substring(0, maxLength) + '...' : textContent;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-sm ${isDark ? 'text-gray-300' : 'text-gray-600'}`,\n      children: truncated || 'No content yet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n  const renderImages = () => {\n    if (!Array.isArray(content)) {\n      return null;\n    }\n    const imageBlocks = content.filter(block => block.type === 'image');\n    if (imageBlocks.length === 0) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mt-2\",\n      children: [imageBlocks.slice(0, 3).map((block, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: block.src,\n        alt: block.alt || 'Image',\n        className: \"w-12 h-12 object-cover rounded border\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), imageBlocks.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-12 h-12 rounded border flex items-center justify-center text-xs ${isDark ? 'bg-gray-700 text-gray-300 border-gray-600' : 'bg-gray-100 text-gray-600 border-gray-300'}`,\n        children: [\"+\", imageBlocks.length - 3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: [renderContent(), renderImages()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentPreview, \"p8LwrWNaEMX2B6gWWkmgIiuCFNw=\", false, function () {\n  return [useTheme];\n});\n_c = DocumentPreview;\nexport default DocumentPreview;\nvar _c;\n$RefreshReg$(_c, \"DocumentPreview\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","DocumentPreview","content","maxLength","_s","isDark","renderContent","Array","isArray","textBlock","find","block","type","tempDiv","document","createElement","innerHTML","textContent","innerText","truncated","length","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderImages","imageBlocks","filter","slice","map","index","src","alt","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/components/DocumentPreview.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\n\r\nconst DocumentPreview = ({ content, maxLength = 200 }) => {\r\n  const { isDark } = useTheme();\r\n\r\n  const renderContent = () => {\r\n    if (!Array.isArray(content)) {\r\n      return null;\r\n    }\r\n\r\n    const textBlock = content.find(block => block.type === 'text');\r\n    if (!textBlock) {\r\n      return null;\r\n    }\r\n\r\n    // Create a temporary div to extract text content from HTML\r\n    const tempDiv = document.createElement('div');\r\n    tempDiv.innerHTML = textBlock.content;\r\n    const textContent = tempDiv.textContent || tempDiv.innerText || '';\r\n\r\n    // Truncate if too long\r\n    const truncated = textContent.length > maxLength \r\n      ? textContent.substring(0, maxLength) + '...' \r\n      : textContent;\r\n\r\n    return (\r\n      <div className={`text-sm ${isDark ? 'text-gray-300' : 'text-gray-600'}`}>\r\n        {truncated || 'No content yet'}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderImages = () => {\r\n    if (!Array.isArray(content)) {\r\n      return null;\r\n    }\r\n\r\n    const imageBlocks = content.filter(block => block.type === 'image');\r\n    if (imageBlocks.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"flex gap-2 mt-2\">\r\n        {imageBlocks.slice(0, 3).map((block, index) => (\r\n          <img\r\n            key={index}\r\n            src={block.src}\r\n            alt={block.alt || 'Image'}\r\n            className=\"w-12 h-12 object-cover rounded border\"\r\n          />\r\n        ))}\r\n        {imageBlocks.length > 3 && (\r\n          <div className={`w-12 h-12 rounded border flex items-center justify-center text-xs ${\r\n            isDark ? 'bg-gray-700 text-gray-300 border-gray-600' : 'bg-gray-100 text-gray-600 border-gray-300'\r\n          }`}>\r\n            +{imageBlocks.length - 3}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {renderContent()}\r\n      {renderImages()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentPreview; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}