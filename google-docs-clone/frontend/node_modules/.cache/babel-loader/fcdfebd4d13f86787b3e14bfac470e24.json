{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\components\\\\DocumentEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDocument, updateDocument } from '../services/documentService';\nimport TextElement from './TextElement';\nimport ImageElement from './ImageElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentEditor = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [document, setDocument] = useState({\n    title: '',\n    content: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchDocument = async () => {\n      try {\n        const fetched = await getDocument(id);\n        const contentArray = Array.isArray(fetched.content) ? fetched.content : [{\n          type: 'text',\n          content: fetched.content || ''\n        }];\n        setDocument({\n          title: fetched.title || 'Untitled Document',\n          content: contentArray\n        });\n      } catch (error) {\n        console.error('Error fetching document:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDocument();\n  }, [id]);\n  const handleContentChange = (index, newContent) => {\n    const updated = [...document.content];\n    updated[index].content = newContent;\n    setDocument({\n      ...document,\n      content: updated\n    });\n  };\n  const handleImageChange = (index, newSrc) => {\n    const updated = [...document.content];\n    updated[index].src = newSrc;\n    setDocument({\n      ...document,\n      content: updated\n    });\n  };\n  const handleSave = async () => {\n    try {\n      await updateDocument(id, document);\n      alert('Document saved successfully!');\n    } catch (error) {\n      console.error('Error saving document:', error);\n      alert('Failed to save document.');\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: document.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"mb-6 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n      children: \"Save Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: document.content.map((element, index) => {\n        if (element.type === 'text') {\n          return /*#__PURE__*/_jsxDEV(TextElement, {\n            content: element.content,\n            onChange: newContent => handleContentChange(index, newContent)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        }\n        if (element.type === 'image') {\n          return /*#__PURE__*/_jsxDEV(ImageElement, {\n            src: element.src,\n            alt: element.alt,\n            onDelete: () => {\n              const updated = document.content.filter((_, i) => i !== index);\n              setDocument({\n                ...document,\n                content: updated\n              });\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unsupported element\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentEditor, \"AUE1Eh5c/yXZ4+omAtuG3t2vc9I=\", false, function () {\n  return [useParams];\n});\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDocument","updateDocument","TextElement","ImageElement","jsxDEV","_jsxDEV","DocumentEditor","_s","id","document","setDocument","title","content","isLoading","setIsLoading","fetchDocument","fetched","contentArray","Array","isArray","type","error","console","handleContentChange","index","newContent","updated","handleImageChange","newSrc","src","handleSave","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","element","onChange","alt","onDelete","filter","_","i","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/components/DocumentEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDocument, updateDocument } from '../services/documentService';\nimport TextElement from './TextElement';\nimport ImageElement from './ImageElement';\n\nconst DocumentEditor = () => {\n  const { id } = useParams();\n  const [document, setDocument] = useState({ title: '', content: [] });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchDocument = async () => {\n      try {\n        const fetched = await getDocument(id);\n\n        const contentArray = Array.isArray(fetched.content)\n          ? fetched.content\n          : [{ type: 'text', content: fetched.content || '' }];\n\n        setDocument({\n          title: fetched.title || 'Untitled Document',\n          content: contentArray,\n        });\n      } catch (error) {\n        console.error('Error fetching document:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDocument();\n  }, [id]);\n\n  const handleContentChange = (index, newContent) => {\n    const updated = [...document.content];\n    updated[index].content = newContent;\n    setDocument({ ...document, content: updated });\n  };\n\n  const handleImageChange = (index, newSrc) => {\n    const updated = [...document.content];\n    updated[index].src = newSrc;\n    setDocument({ ...document, content: updated });\n  };\n\n  const handleSave = async () => {\n    try {\n      await updateDocument(id, document);\n      alert('Document saved successfully!');\n    } catch (error) {\n      console.error('Error saving document:', error);\n      alert('Failed to save document.');\n    }\n  };\n\n  if (isLoading) return <div className=\"p-4\">Loading...</div>;\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">{document.title}</h1>\n\n      <button\n        onClick={handleSave}\n        className=\"mb-6 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n      >\n        Save Document\n      </button>\n\n      <div className=\"space-y-6\">\n        {document.content.map((element, index) => {\n          if (element.type === 'text') {\n            return (\n              <TextElement\n                key={index}\n                content={element.content}\n                onChange={(newContent) => handleContentChange(index, newContent)}\n              />\n            );\n          }\n\n          if (element.type === 'image') {\n            return (\n              <ImageElement\n                key={index}\n                src={element.src}\n                alt={element.alt}\n                onDelete={() => {\n                  const updated = document.content.filter((_, i) => i !== index);\n                  setDocument({ ...document, content: updated });\n                }}\n              />\n            );\n          }\n\n          return <p key={index}>Unsupported element</p>;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,cAAc,QAAQ,6BAA6B;AACzE,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IAAEc,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMhB,WAAW,CAACQ,EAAE,CAAC;QAErC,MAAMS,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACH,OAAO,CAACJ,OAAO,CAAC,GAC/CI,OAAO,CAACJ,OAAO,GACf,CAAC;UAAEQ,IAAI,EAAE,MAAM;UAAER,OAAO,EAAEI,OAAO,CAACJ,OAAO,IAAI;QAAG,CAAC,CAAC;QAEtDF,WAAW,CAAC;UACVC,KAAK,EAAEK,OAAO,CAACL,KAAK,IAAI,mBAAmB;UAC3CC,OAAO,EAAEK;QACX,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,SAAS;QACRP,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,MAAMe,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;IACjD,MAAMC,OAAO,GAAG,CAAC,GAAGjB,QAAQ,CAACG,OAAO,CAAC;IACrCc,OAAO,CAACF,KAAK,CAAC,CAACZ,OAAO,GAAGa,UAAU;IACnCf,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAEG,OAAO,EAAEc;IAAQ,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACH,KAAK,EAAEI,MAAM,KAAK;IAC3C,MAAMF,OAAO,GAAG,CAAC,GAAGjB,QAAQ,CAACG,OAAO,CAAC;IACrCc,OAAO,CAACF,KAAK,CAAC,CAACK,GAAG,GAAGD,MAAM;IAC3BlB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAEG,OAAO,EAAEc;IAAQ,CAAC,CAAC;EAChD,CAAC;EAED,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM7B,cAAc,CAACO,EAAE,EAAEC,QAAQ,CAAC;MAClCsB,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CU,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,IAAIlB,SAAS,EAAE,oBAAOR,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3D,oBACEhC,OAAA;IAAK2B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5B,OAAA;MAAI2B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAExB,QAAQ,CAACE;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7DhC,OAAA;MACEiC,OAAO,EAAER,UAAW;MACpBE,SAAS,EAAC,mEAAmE;MAAAC,QAAA,EAC9E;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEThC,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBxB,QAAQ,CAACG,OAAO,CAAC2B,GAAG,CAAC,CAACC,OAAO,EAAEhB,KAAK,KAAK;QACxC,IAAIgB,OAAO,CAACpB,IAAI,KAAK,MAAM,EAAE;UAC3B,oBACEf,OAAA,CAACH,WAAW;YAEVU,OAAO,EAAE4B,OAAO,CAAC5B,OAAQ;YACzB6B,QAAQ,EAAGhB,UAAU,IAAKF,mBAAmB,CAACC,KAAK,EAAEC,UAAU;UAAE,GAF5DD,KAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGX,CAAC;QAEN;QAEA,IAAIG,OAAO,CAACpB,IAAI,KAAK,OAAO,EAAE;UAC5B,oBACEf,OAAA,CAACF,YAAY;YAEX0B,GAAG,EAAEW,OAAO,CAACX,GAAI;YACjBa,GAAG,EAAEF,OAAO,CAACE,GAAI;YACjBC,QAAQ,EAAEA,CAAA,KAAM;cACd,MAAMjB,OAAO,GAAGjB,QAAQ,CAACG,OAAO,CAACgC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKtB,KAAK,CAAC;cAC9Dd,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEG,OAAO,EAAEc;cAAQ,CAAC,CAAC;YAChD;UAAE,GANGF,KAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOX,CAAC;QAEN;QAEA,oBAAOhC,OAAA;UAAA4B,QAAA,EAAe;QAAmB,GAA1BT,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CAAC;MAC/C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA9FID,cAAc;EAAA,QACHP,SAAS;AAAA;AAAAgD,EAAA,GADpBzC,cAAc;AAgGpB,eAAeA,cAAc;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}