{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs-MERN\\\\google-docs-clone\\\\frontend\\\\src\\\\components\\\\DocumentEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDocument, updateDocument } from '../services/documentService';\nimport TextElement from './TextElement';\nimport ImageElement from './ImageElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentEditor = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [document, setDocument] = useState({\n    title: '',\n    content: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchDocument = async () => {\n      try {\n        const fetchedDocument = await getDocument(id);\n\n        // Normalize content to array if it's not\n        const normalizedContent = Array.isArray(fetchedDocument.content) ? fetchedDocument.content : [{\n          type: 'text',\n          content: fetchedDocument.content || ''\n        }];\n        setDocument({\n          title: fetchedDocument.title || '',\n          content: normalizedContent\n        });\n      } catch (error) {\n        console.error('Error fetching document:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDocument();\n  }, [id]);\n  const handleSave = async () => {\n    try {\n      await updateDocument(id, document);\n      alert('Document saved successfully!');\n    } catch (error) {\n      console.error('Error saving document:', error);\n    }\n  };\n  const handleChange = updatedContent => {\n    setDocument(prevDoc => ({\n      ...prevDoc,\n      content: updatedContent\n    }));\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: document.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: document.content.map((element, index) => {\n        if (element.type === 'text') {\n          return /*#__PURE__*/_jsxDEV(TextElement, {\n            content: element.content,\n            onChange: newContent => {\n              const updatedContent = [...document.content];\n              updatedContent[index].content = newContent;\n              handleChange(updatedContent);\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this);\n        } else if (element.type === 'image') {\n          return /*#__PURE__*/_jsxDEV(ImageElement, {\n            src: element.src,\n            alt: element.alt,\n            onChange: newSrc => {\n              const updatedContent = [...document.content];\n              updatedContent[index].src = newSrc;\n              handleChange(updatedContent);\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(DocumentEditor, \"AUE1Eh5c/yXZ4+omAtuG3t2vc9I=\", false, function () {\n  return [useParams];\n});\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDocument","updateDocument","TextElement","ImageElement","jsxDEV","_jsxDEV","DocumentEditor","_s","id","document","setDocument","title","content","isLoading","setIsLoading","fetchDocument","fetchedDocument","normalizedContent","Array","isArray","type","error","console","handleSave","alert","handleChange","updatedContent","prevDoc","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","element","index","onChange","newContent","src","alt","newSrc","_c","$RefreshReg$"],"sources":["D:/Docs-MERN/google-docs-clone/frontend/src/components/DocumentEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDocument, updateDocument } from '../services/documentService';\nimport TextElement from './TextElement';\nimport ImageElement from './ImageElement';\n\nconst DocumentEditor = () => {\n    const { id } = useParams();\n    const [document, setDocument] = useState({ title: '', content: [] });\n    const [isLoading, setIsLoading] = useState(true);\n\n\n    useEffect(() => {\n    const fetchDocument = async () => {\n        try {\n            const fetchedDocument = await getDocument(id);\n            \n            // Normalize content to array if it's not\n            const normalizedContent = Array.isArray(fetchedDocument.content)\n                ? fetchedDocument.content\n                : [{ type: 'text', content: fetchedDocument.content || '' }];\n\n            setDocument({\n                title: fetchedDocument.title || '',\n                content: normalizedContent\n            });\n        } catch (error) {\n            console.error('Error fetching document:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    fetchDocument();\n}, [id]);\n\n\n    const handleSave = async () => {\n        try {\n            await updateDocument(id,document);\n            alert('Document saved successfully!');\n        } catch (error) {\n            console.error('Error saving document:', error);\n        }\n    };\n\n    const handleChange = (updatedContent) => {\n        setDocument((prevDoc) => ({ ...prevDoc, content: updatedContent }));\n    };\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h1>{document.title}</h1>\n            <button onClick={handleSave}>Save Document</button>\n            <div>\n                {document.content.map((element, index) => {\n                    if (element.type === 'text') {\n                        return (\n                            <TextElement\n                                key={index}\n                                content={element.content}\n                                onChange={(newContent) => {\n                                    const updatedContent = [...document.content];\n                                    updatedContent[index].content = newContent;\n                                    handleChange(updatedContent);\n                                }}\n                            />\n                        );\n                    } else if (element.type === 'image') {\n                        return (\n                            <ImageElement\n                                key={index}\n                                src={element.src}\n                                alt={element.alt}\n                                onChange={(newSrc) => {\n                                    const updatedContent = [...document.content];\n                                    updatedContent[index].src = newSrc;\n                                    handleChange(updatedContent);\n                                }}\n                            />\n                        );\n                    }\n                    return null;\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default DocumentEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}